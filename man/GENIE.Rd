% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{GENIE}
\alias{GENIE}
\title{GENIE: Item Validation and Reduction (Without Item Generation)}
\usage{
GENIE(
  items,
  openai.API,
  EGA.model = NULL,
  EGA.algorithm = "walktrap",
  embedding.model = "text-embedding-3-small",
  plot = TRUE,
  plot.stability = FALSE,
  calc.final.stability = FALSE,
  silently = FALSE,
  ...
)
}
\arguments{
\item{items}{A required data frame containing the item pool. This data frame must include at least three columns:
\code{statement} (the item text), \code{type} (the item type label), and \code{attribute} (the associated attribute/characteristic).
The pool should contain at least 50 unique items overall, with at least 15 items per distinct item type.}

\item{openai.API}{A required character string containing your OpenAI API key.}

\item{EGA.model}{An optional character string specifying the EGA model to use (e.g., \code{"tmfg"} or \code{"glasso"}). If set to \code{NULL},
both models are evaluated, and the one with the highest Normalized Mutual Information (NMI) is selected.}

\item{EGA.algorithm}{A character string specifying the clustering algorithm for EGA. Options include \code{"walktrap"}, \code{"louvain"}, or \code{"leiden"}. Defaults to \code{"walktrap"}.}

\item{embedding.model}{A character string specifying the OpenAI embedding model to use (e.g., \code{"text-embedding-3-small"}, \code{"text-embedding-3-large"}, or \code{"text-embedding-ada-002"}).
Defaults to \code{"text-embedding-3-small"}.}

\item{plot}{Logical; defaults to \code{TRUE}. If \code{TRUE}, network plots comparing the item pool before and after reduction are generated.}

\item{plot.stability}{Logical; defaults to \code{FALSE}. If \code{TRUE}, secondary network stability plots are generated.}

\item{calc.final.stability}{Logical; defaults to \code{FALSE}. If \code{TRUE}, bootstrapped stability analysis is performed (this may significantly increase computation time).}

\item{silently}{Logical; defaults to \code{FALSE}. If \code{TRUE}, console output is suppressed.}

\item{...}{Additional arguments passed to underlying functions in the pipeline.}
}
\value{
Returns a list with two elements:
\describe{
\item{\code{overall_sample}}{
A list containing the overall sample-level analysis results:
\itemize{
\item \code{main_result}: A data frame of the refined item pool after reduction, including columns such as \code{ID}, \code{type}, \code{statement}, and \code{EGA_communities}.
\item \code{final_ega_obj}: The final EGA object after reduction.
\item \code{final_bootega_obj}: The final bootstrapped EGA (bootEGA) object after reduction (if stability analysis was performed).
\item \code{initial_ega_obj}: The initial EGA object computed on the full generated pool.
\item \code{initial_bootega_obj}: The initial bootEGA object computed on the redundancy-reduced items.
\item \code{selected_model}: The EGA model used throughout the pipeline (either as specified or selected based on NMI).
\item \code{nmi}: The final Normalized Mutual Information (NMI) value after reduction.
\item \code{start_nmi}: The NMI value computed on the original generated item pool.
\item \code{start_N}: The number of items in the initial generated pool.
\item \code{final_N}: The number of items in the final refined pool.
\item \code{network_plot}: A network plot object comparing the pre- and post-reduction item networks.
\item \code{stability_plot}: A stability plot object (if \code{calc.final.stability = TRUE}).
\item \code{embeddings}: A list of embeddings used in the analysis. This list includes:
\itemize{
\item \code{full}: The full embeddings matrix for the reduced items.
\item \code{sparse}: A sparsified version of the embeddings.
\item \code{embed_type_used}: A string indicating whether "full" or "sparse" embeddings were ultimately used.
}
}
}
\item{\code{item_type_level}}{
A named list containing analysis results for each individual item type.
Each element is a list with the corresponding output (with the same structure as the the overall sample output)
for that item type.
}
}
}
\description{
This function processes an existing item pool to validate and refine item selection using AI-GENIE.
It applies network-based quality assessment, redundancy reduction, and stability evaluation.
Unlike \code{AIGENIE}, this function does not generate new items but instead focuses on optimizing
an existing dataset.
}
\details{
The function performs the following steps:
\itemize{
\item Embeds the items using the specified OpenAI embedding model.
\item Runs the reduction pipeline to remove redundant items via Unique Variable Analysis (UVA) and validate items via bootstrapped Exploritory Graph Analysis (bootEGA) for further refinement.
}
}
\examples{
\dontrun{
########################################################################
##### Use AI-GENIE without AI - Validate Existing Items via GENIE ######
########################################################################

# Add an OpenAI API key
key <- "INSERT YOUR KEY HERE"

## Create a data frame of items to reduce - for this example, we will focus only on Neuroticism and Extraversion

## Neuroticism items (example for the 'anxious' attribute)
neuroticism_statements <- c("I often worry about things that may never happen.",
                            "The thought of uncertainty makes me feel uneasy.",
                            "I often feel on edge and apprehensive about the future.",
                            "I tend to overthink and dwell on negative possibilities.",
                            "I often find myself anticipating the worst possible outcome.",
                            "I frequently feel a sense of dread without any specific reason.",
                            "I often feel a sense of impending doom for no reason.",
                            "I frequently have irrational fears that something bad will happen.",
                            "I frequently worry about things that may never happen.",
                            "I often feel a tightness in my chest when faced with uncertainty.",
                            "I frequently worry about possible negative outcomes in everyday situations.",
                            "I frequently feel a sense of impending doom for no reason.",
                            "I frequently feel a knot in my stomach over minor uncertainties.",
                            "I am constantly on edge, waiting for something terrible to happen.",
                            "I constantly feel a sense of unease and worry, even in everyday situations.",
                            "I often feel panicky and overwhelmed by minor stressors.")

type <- rep("neuroticism", 16)
attribute <- rep("anxious", 16)

## Neuroticism items (example for the 'emotional' attribute)
neuroticism_statements <- c(neuroticism_statements,
                            "I am easily overwhelmed by intense feelings of sadness.",
                            "I find myself getting emotional over small, everyday occurrences.",
                            "I am easily moved to tears by even small gestures of kindness.",
                            "I experience extreme highs and lows in my emotional state.",
                            "My emotions can sometimes feel overwhelming and difficult to control.",
                            "My feelings tend to be intense and overwhelming, often difficult to manage.",
                            "It is common for me to feel tense and easily startled.",
                            "I frequently find myself getting choked up over sentimental moments.",
                            "I am easily moved to tears by small acts of kindness.",
                            "My feelings are often intense and difficult to control.",
                            "I am easily moved to tears by movies or sad stories.",
                            "My feelings often overwhelm me, making it hard to cope at times.",
                            "My emotions tend to be intense and difficult to regulate.",
                            "I am easily moved to tears by touching moments in movies or books.",
                            "I find it challenging to control how I respond to my feelings.",
                            "It's difficult for me to recognize when I overreact.")

type <- c(type, rep("neuroticism", 16))
attribute <- c(attribute, rep("emotional", 16))

## Extraversion items (example for the 'assertive' attribute)
extraversion_statements <- c("I am not afraid to speak my mind and assert my opinions in group discussions.",
                             "I have no problem taking the lead in group projects or activities.",
                             "I confidently express my thoughts and ideas in professional settings.",
                             "I am not hesitant to take charge and make decisions when needed.",
                             "I am not afraid to speak up and advocate for what I believe in.",
                             "Others see me as someone who confidently asserts my opinions.",
                             "I am not afraid to assert myself and speak up for what I believe in.",
                             "Others see me as someone who confidently takes charge in group settings.",
                             "I confidently voice my opinions and stand up for my beliefs.",
                             "I am not afraid to take charge and lead when necessary.",
                             "I confidently speak my mind and stand up for what I believe in.",
                             "Taking the lead in group settings is something I excel at without hesitation.",
                             "I confidently voice my opinions and assert myself in any situation.",
                             "Others perceive me as someone who confidently takes charge and leads.",
                             "I confidently express my opinions and assert myself when needed.",
                             "Taking the lead in discussions or projects is something I do without hesitation.")

type <- c(type, rep("extraversion", 16))
attribute <- c(attribute, rep("assertive", 16))


## Extraversion items (example for the 'energetic' attribute)
extraversion_statements <- c(extraversion_statements,
                             "Approaching each day with enthusiasm and vigor is my standard mode of operation.",
                             "My dynamic energy and lively nature bring excitement to every interaction.",
                             "Approaching each day with high levels of enthusiasm and energy is simply part of who I am.",
                             "My vibrant energy is infectious and lights up any room I enter.",
                             "I always am ready to dive into new adventures.",
                             "Approaching each day with exuberance is just who I am.",
                             "My energetic and lively spirit is infectious.",
                             "I have an infectious lively spirit that energizes those around me.",
                             "I best thrive in lively environments.",
                             "Approaching each day with exuberance is my norm.",
                             "I have an abundance of energy that fuels my actions throughout the day.",
                             "I enjoy conversations that are upbeat and spry.",
                             "I am usually the most energetic person in the room.",
                             "I absolutely love it when there is excitement in the air.",
                             "My energy is contagious and lights up the room.",
                             "My lively nature brings a dynamic energy to any situation.")

type <- c(type, rep("extraversion", 16))
attribute <- c(attribute, rep("energetic", 16))


# Combine into a data frame
my.personality.items <- data.frame(statement = c(neuroticism_statements, extraversion_statements),
                                   type = type,
                                   attribute = attribute,
                                   stringsAsFactors = FALSE)

# Run GENIE to validate and redundancy-check the item pool
my.personality.inventory.results <- GENIE(
  items = my.personality.items,
  openai.API = key,
  EGA.algorithm = "walktrap"
)

# View the final refined item pool
View(my.personality.inventory.results$main_result)
}
}
