% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/user_input_validation_helpers.R
\name{validate_item_difficulty}
\alias{validate_item_difficulty}
\title{Validate Item Difficulty}
\usage{
validate_item_difficulty(item.difficulty)
}
\arguments{
\item{item.difficulty}{A list specifying the difficulty levels for each item type. For a named list, the names serve as item type labels and the elements should be character vectors. For an unnamed list, each element is treated as an item type label.}
}
\value{
A named list with the same item type names as the input, where each element is a character vector of validated
and standardized difficulty values in all caps.
}
\description{
Validates and standardizes the \code{item.difficulty} parameter for performance-based assessments in the \code{p_AIGENIE} function.
}
\details{
The input should be a list that specifies the difficulty levels for each item type. There are two supported formats:
\itemize{
\item \strong{Named list:} The names of the list represent the item types, and each element is a character vector of difficulty values.
Each difficulty value must be one of the accepted synonyms (case insensitive) which are mapped as follows:
\itemize{
\item "very easy", "very simple", "very basic" → "VERY LOW"
\item "easy", "simple", "basic" → "LOW"
\item "average", "standard" → "MEDIUM"
\item "hard", "difficult", "challenging" → "HIGH"
\item "very hard", "very difficult", "very challenging" → "VERY HIGH"
}
Each sublist must contain at least 2 unique difficulty values.

\item \strong{Unnamed list:} If \code{item.difficulty} is not named (i.e., just a simple list of item type labels),
the function assumes the user wants to assign the default difficulty vector of \code{c("LOW", "MEDIUM", "HIGH")}
to each item type.
}
}
\examples{
# Example 1: Named list with synonyms
validate_item_difficulty(list(
  fractions = c("average", "HARD"),
  exponents = c("easy", "VERY easy")
))
# Returns: list(fractions = c("MEDIUM", "HIGH"), exponents = c("LOW", "VERY LOW"))

# Example 2: Unnamed list (using default difficulties)
validate_item_difficulty(list("fractions", "exponents"))
# Returns: list(fractions = c("LOW", "MEDIUM", "HIGH"), exponents = c("LOW", "MEDIUM", "HIGH"))
}
