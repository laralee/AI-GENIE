% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{validate_prompt}
\alias{validate_prompt}
\title{Validate Custom Prompt Inputs and Generate Output}
\usage{
validate_prompt(
  openai.API = NULL,
  groq.API = NULL,
  user.prompts = NULL,
  N.runs = 3,
  model = "gpt3.5",
  top.p = 1,
  temperature = 1,
  system.role = NULL,
  silently = FALSE
)
}
\arguments{
\item{openai.API}{Required when \code{groq.API} is NOT specified. A character string containing your OpenAI API key.}

\item{groq.API}{Required when \code{openai.API} is NOT specified. A character string containing your Groq API key.}

\item{user.prompts}{A named list of custom prompt strings. Each element corresponds to an item type.}

\item{N.runs}{An integer specifying the number of iterations to run each prompt for validation. Defaults to \code{3}.}

\item{model}{A character string specifying the language model to use. Defaults to \code{"gpt3.5"}.}

\item{top.p}{Numeric; defaults to \code{1}. Sets the top-p sampling parameter for the language model.}

\item{temperature}{Numeric; defaults to \code{1}. Controls the randomness of the model's output (valid range: 0â€“2).}

\item{system.role}{Optional. A character string defining the role of the language model (e.g., "an expert methodologist").}

\item{silently}{Logical; defaults to \code{FALSE}. If \code{TRUE}, suppresses console output.}
}
\value{
A list of the output generated by the language model as produced by your prompts. The structure of the returned output
depends on the prompts, language model used, and model settings (i.e, temperature and top-p values).
}
\description{
This function validates the inputs required for custom prompt generation and then generates output using the language model.
It verifies that at least one API key is provided, that the custom prompts are correctly formatted, and that numerical parameters
(such as \code{N.runs}, \code{top.p}, and \code{temperature}) and the optional \code{system.role} are valid.
After validation (via \code{validate_promt_inputs}), it calls \code{generate_output} with the validated parameters and returns the generated output.
}
